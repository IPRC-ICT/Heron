from ortools.sat.python import cp_model

model = cp_model.CpModel()
dense_global_pos = model.NewIntVar(0, 3, 'dense_global_pos')
dense_unroll_pragma = model.NewIntVar(0, 5, 'dense_unroll_pragma')
dense_i_outer = model.NewIntVar(1, 64, 'dense_i_outer')
dense_i_inner = model.NewIntVar(1, 64, 'dense_i_inner')
dense_j_outer = model.NewIntVar(1, 64, 'dense_j_outer')
dense_j_inner = model.NewIntVar(1, 64, 'dense_j_inner')
densei_innertileSpatial = model.NewIntVar(1, 64, 'densei_innertileSpatial')
dense_i_inner_outer = model.NewIntVar(1, 64, 'dense_i_inner_outer')
dense_i_inner_inner = model.NewIntVar(1, 64, 'dense_i_inner_inner')
densej_innertileSpatial = model.NewIntVar(1, 64, 'densej_innertileSpatial')
dense_j_inner_outer = model.NewIntVar(1, 64, 'dense_j_inner_outer')
dense_j_inner_inner = model.NewIntVar(1, 64, 'dense_j_inner_inner')
dense_i_inner_outer_j_inner_outer_fused = model.NewIntVar(1, 1000000, 'dense_i_inner_outer_j_inner_outer_fused')
densei_inner_innertileSpatial = model.NewIntVar(1, 64, 'densei_inner_innertileSpatial')
dense_i_inner_inner_outer = model.NewIntVar(1, 64, 'dense_i_inner_inner_outer')
dense_i_inner_inner_inner = model.NewIntVar(1, 64, 'dense_i_inner_inner_inner')
densej_inner_innertileSpatial = model.NewIntVar(1, 64, 'densej_inner_innertileSpatial')
dense_j_inner_inner_outer = model.NewIntVar(1, 64, 'dense_j_inner_inner_outer')
dense_j_inner_inner_inner = model.NewIntVar(1, 64, 'dense_j_inner_inner_inner')
dense_vectorize = model.NewIntVar(0, 1, 'dense_vectorize')
dense_global_i_c = model.NewIntVar(1, 64, 'dense_global_i_c')
dense_global_pos_select0 = model.NewIntVar(0, 1, 'dense_global_pos_select0')
dense_global_pos_select1 = model.NewIntVar(0, 1, 'dense_global_pos_select1')
dense_global_pos_select2 = model.NewIntVar(0, 1, 'dense_global_pos_select2')
dense_global_pos_select3 = model.NewIntVar(0, 1, 'dense_global_pos_select3')
dense_global_j_c = model.NewIntVar(1, 64, 'dense_global_j_c')
dense_global_i_c_outer = model.NewIntVar(1, 64, 'dense_global_i_c_outer')
dense_global_i_c_inner = model.NewIntVar(1, 64, 'dense_global_i_c_inner')
dense_global_j_c_outer = model.NewIntVar(1, 64, 'dense_global_j_c_outer')
dense_global_j_c_inner = model.NewIntVar(1, 64, 'dense_global_j_c_inner')
dense_global_k_outer = model.NewIntVar(1, 64, 'dense_global_k_outer')
dense_global_k_inner = model.NewIntVar(1, 64, 'dense_global_k_inner')
dense_globali_c_outertileAll = model.NewIntVar(1, 64, 'dense_globali_c_outertileAll')
dense_global_i_c_outer_outer = model.NewIntVar(1, 64, 'dense_global_i_c_outer_outer')
dense_global_i_c_outer_inner = model.NewIntVar(1, 64, 'dense_global_i_c_outer_inner')
dense_globalj_c_outertileAll = model.NewIntVar(1, 64, 'dense_globalj_c_outertileAll')
dense_global_j_c_outer_outer = model.NewIntVar(1, 64, 'dense_global_j_c_outer_outer')
dense_global_j_c_outer_inner = model.NewIntVar(1, 64, 'dense_global_j_c_outer_inner')
dense_globalk_outertileAll = model.NewIntVar(1, 64, 'dense_globalk_outertileAll')
dense_global_k_outer_outer = model.NewIntVar(1, 64, 'dense_global_k_outer_outer')
dense_global_k_outer_inner = model.NewIntVar(1, 64, 'dense_global_k_outer_inner')
dense_globali_c_outer_innertileAll = model.NewIntVar(1, 64, 'dense_globali_c_outer_innertileAll')
dense_global_i_c_outer_inner_outer = model.NewIntVar(1, 64, 'dense_global_i_c_outer_inner_outer')
dense_global_i_c_outer_inner_inner = model.NewIntVar(1, 64, 'dense_global_i_c_outer_inner_inner')
dense_globalj_c_outer_innertileAll = model.NewIntVar(1, 64, 'dense_globalj_c_outer_innertileAll')
dense_global_j_c_outer_inner_outer = model.NewIntVar(1, 64, 'dense_global_j_c_outer_inner_outer')
dense_global_j_c_outer_inner_inner = model.NewIntVar(1, 64, 'dense_global_j_c_outer_inner_inner')
dense_globalk_outer_innertileAll = model.NewIntVar(1, 64, 'dense_globalk_outer_innertileAll')
dense_global_k_outer_inner_outer = model.NewIntVar(1, 64, 'dense_global_k_outer_inner_outer')
dense_global_k_outer_inner_inner = model.NewIntVar(1, 64, 'dense_global_k_outer_inner_inner')
dense_globali_c_outer_inner_innertileAll = model.NewIntVar(1, 64, 'dense_globali_c_outer_inner_innertileAll')
dense_global_i_c_outer_inner_inner_outer = model.NewIntVar(1, 64, 'dense_global_i_c_outer_inner_inner_outer')
dense_global_i_c_outer_inner_inner_inner = model.NewIntVar(1, 64, 'dense_global_i_c_outer_inner_inner_inner')
dense_globalj_c_outer_inner_innertileAll = model.NewIntVar(1, 64, 'dense_globalj_c_outer_inner_innertileAll')
dense_global_j_c_outer_inner_inner_outer = model.NewIntVar(1, 64, 'dense_global_j_c_outer_inner_inner_outer')
dense_global_j_c_outer_inner_inner_inner = model.NewIntVar(1, 64, 'dense_global_j_c_outer_inner_inner_inner')
dense_globalk_outer_inner_innertileAll = model.NewIntVar(1, 64, 'dense_globalk_outer_inner_innertileAll')
dense_global_k_outer_inner_inner_outer = model.NewIntVar(1, 64, 'dense_global_k_outer_inner_inner_outer')
dense_global_k_outer_inner_inner_inner = model.NewIntVar(1, 64, 'dense_global_k_outer_inner_inner_inner')
model.AddMultiplicationEquality(64, [dense_i_outer, dense_i_inner])
model.Add(dense_i_outer == 1)
model.AddMultiplicationEquality(64, [dense_j_outer, dense_j_inner])
model.Add(dense_j_outer == 1)
model.AddMultiplicationEquality(dense_i_inner, [dense_i_inner_outer, dense_i_inner_inner])
model.Add(dense_i_inner_outer == densei_innertileSpatial)
model.AddMultiplicationEquality(dense_j_inner, [dense_j_inner_outer, dense_j_inner_inner])
model.Add(dense_j_inner_outer == densej_innertileSpatial)
model.AddMultiplicationEquality(dense_i_inner_outer_j_inner_outer_fused, [dense_i_inner_outer, dense_j_inner_outer])
model.AddMultiplicationEquality(dense_i_inner_inner, [dense_i_inner_inner_outer, dense_i_inner_inner_inner])
model.Add(dense_i_inner_inner_outer == densei_inner_innertileSpatial)
model.AddMultiplicationEquality(dense_j_inner_inner, [dense_j_inner_inner_outer, dense_j_inner_inner_inner])
model.Add(dense_j_inner_inner_outer == densej_inner_innertileSpatial)
model.Add(dense_global_i_c == dense_i_inner).OnlyEnforceIf(dense_global_pos_select0)
model.Add(dense_global_pos == 0).OnlyEnforceIf(dense_global_pos_select0)
model.Add(dense_global_i_c == dense_i_inner_inner).OnlyEnforceIf(dense_global_pos_select1)
model.Add(dense_global_pos == 1).OnlyEnforceIf(dense_global_pos_select1)
model.Add(dense_global_i_c == dense_i_inner_inner_inner).OnlyEnforceIf(dense_global_pos_select2)
model.Add(dense_global_pos == 2).OnlyEnforceIf(dense_global_pos_select2)
model.Add(dense_global_i_c == 1).OnlyEnforceIf(dense_global_pos_select3)
model.Add(dense_global_pos == 3).OnlyEnforceIf(dense_global_pos_select3)
model.Add(sum([dense_global_pos_select0, dense_global_pos_select1, dense_global_pos_select2, dense_global_pos_select3]) == 1)
model.Add(dense_global_j_c == dense_j_inner).OnlyEnforceIf(dense_global_pos_select0)
model.Add(dense_global_pos == 0).OnlyEnforceIf(dense_global_pos_select0)
model.Add(dense_global_j_c == dense_j_inner_inner).OnlyEnforceIf(dense_global_pos_select1)
model.Add(dense_global_pos == 1).OnlyEnforceIf(dense_global_pos_select1)
model.Add(dense_global_j_c == dense_j_inner_inner_inner).OnlyEnforceIf(dense_global_pos_select2)
model.Add(dense_global_pos == 2).OnlyEnforceIf(dense_global_pos_select2)
model.Add(dense_global_j_c == 1).OnlyEnforceIf(dense_global_pos_select3)
model.Add(dense_global_pos == 3).OnlyEnforceIf(dense_global_pos_select3)
model.Add(sum([dense_global_pos_select0, dense_global_pos_select1, dense_global_pos_select2, dense_global_pos_select3]) == 1)
model.AddMultiplicationEquality(dense_global_i_c, [dense_global_i_c_outer, dense_global_i_c_inner])
model.Add(dense_global_i_c_inner == 1)
model.AddMultiplicationEquality(dense_global_j_c, [dense_global_j_c_outer, dense_global_j_c_inner])
model.Add(dense_global_j_c_inner == 16)
model.AddMultiplicationEquality(64, [dense_global_k_outer, dense_global_k_inner])
model.Add(dense_global_k_inner == 4)
model.AddMultiplicationEquality(dense_global_i_c_outer, [dense_global_i_c_outer_outer, dense_global_i_c_outer_inner])
model.Add(dense_global_i_c_outer_outer == dense_globali_c_outertileAll)
model.AddMultiplicationEquality(dense_global_j_c_outer, [dense_global_j_c_outer_outer, dense_global_j_c_outer_inner])
model.Add(dense_global_j_c_outer_outer == dense_globalj_c_outertileAll)
model.AddMultiplicationEquality(dense_global_k_outer, [dense_global_k_outer_outer, dense_global_k_outer_inner])
model.Add(dense_global_k_outer_outer == dense_globalk_outertileAll)
model.AddMultiplicationEquality(dense_global_i_c_outer_inner, [dense_global_i_c_outer_inner_outer, dense_global_i_c_outer_inner_inner])
model.Add(dense_global_i_c_outer_inner_outer == dense_globali_c_outer_innertileAll)
model.AddMultiplicationEquality(dense_global_j_c_outer_inner, [dense_global_j_c_outer_inner_outer, dense_global_j_c_outer_inner_inner])
model.Add(dense_global_j_c_outer_inner_outer == dense_globalj_c_outer_innertileAll)
model.AddMultiplicationEquality(dense_global_k_outer_inner, [dense_global_k_outer_inner_outer, dense_global_k_outer_inner_inner])
model.Add(dense_global_k_outer_inner_outer == dense_globalk_outer_innertileAll)
model.AddMultiplicationEquality(dense_global_i_c_outer_inner_inner, [dense_global_i_c_outer_inner_inner_outer, dense_global_i_c_outer_inner_inner_inner])
model.Add(dense_global_i_c_outer_inner_inner_outer == dense_globali_c_outer_inner_innertileAll)
model.AddMultiplicationEquality(dense_global_j_c_outer_inner_inner, [dense_global_j_c_outer_inner_inner_outer, dense_global_j_c_outer_inner_inner_inner])
model.Add(dense_global_j_c_outer_inner_inner_outer == dense_globalj_c_outer_inner_innertileAll)
model.AddMultiplicationEquality(dense_global_k_outer_inner_inner, [dense_global_k_outer_inner_inner_outer, dense_global_k_outer_inner_inner_inner])
model.Add(dense_global_k_outer_inner_inner_outer == dense_globalk_outer_inner_innertileAll)
solver = cp_model.CpSolver()
status = solver.Solve(model)
